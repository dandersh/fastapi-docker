# BUILDER #

# Base image
FROM python:3.10.8-slim-buster as builder

# system deps
RUN apt-get update \
  && apt-get -y install gcc postgresql \
  && apt-get clean

# work dir
WORKDIR /usr/src/app

# env variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1



# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# linting
COPY . /usr/src/app/
RUN pip install black==22.10.0 flake8==5.0.4 isort==5.10.1
RUN flake8 .
RUN black --exclude=migrations .
RUN isort .

# FINAL #

# base image 
FROM python:3.10.8-slim-buster

# Base directory
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV ENVIRONMENT prod
ENV TESTING 0

# system dependencies
RUN apt-get update \
  && apt-get -y install netcat gcc postgresql \
  && apt-get clean

# python dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*
RUN pip install "uvicorn[standard]==0.19.0"

# add app
COPY . .

# chown all the files to the app user
RUN chown -R app:app $HOME

# change to app user
USER app

# run gunicorn
CMD gunicorn --bind 0.0.0.0:$PORT app.main:app -k uvicorn.workers.UvicornWorker